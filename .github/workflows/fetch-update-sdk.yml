name: Fetch Huawei Update SDK AAR

on:
  workflow_dispatch:

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download (curl + fallback)
        run: |
          set -e
          mkdir -p dl
          bases=(
            "https://developer.huawei.com/repo" \
            "https://repo.huaweicloud.com/repository/maven" \
            "https://mirrors.huaweicloud.com/repository/maven" \
            "https://repo.hihonor.com/honor-maven"
          )
          app_vers=(6.12.0.302 6.12.0.301 6.12.0.300 6.11.0.302 6.10.0.302 6.10.0.301 6.9.0.300 6.5.0.300 6.3.0.300)
          sdk_vers=(3.1.2.300 3.1.0.300 3.0.2.300 3.0.1.300)
          dl_try(){ url="$1/${2//./\/}/$3/$4/$3-$4.aar"; echo "TRY $url"; curl -f --retry 2 -L "$url" -o "dl/$3-$4.aar" && echo "OK $3-$4" || true; }
          for v in "${app_vers[@]}"; do [ -f "dl/appupdate-$v.aar" ] && break; for b in "${bases[@]}"; do [ -f "dl/appupdate-$v.aar" ] && break; dl_try "$b" com.huawei.hms appupdate "$v"; done; done
          for v in "${sdk_vers[@]}"; do [ -f "dl/update-sdk-$v.aar" ] && break; for b in "${bases[@]}"; do [ -f "dl/update-sdk-$v.aar" ] && break; dl_try "$b" com.huawei.updatesdk update-sdk "$v"; done; done
          ls -l dl || true
          need_app=1; need_sdk=1
          ls dl/appupdate-*.aar >/dev/null 2>&1 && need_app=0 || true
          ls dl/update-sdk-*.aar >/dev/null 2>&1 && need_sdk=0 || true
          if [ $need_app -eq 0 ] && [ $need_sdk -eq 0 ]; then echo "Direct download succeeded"; exit 0; fi
          echo "Maven fallback..."
          printf '%s\n' \
            '<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">' \
            '<modelVersion>4.0.0</modelVersion>' '<groupId>dummy</groupId>' '<artifactId>fetch-huawei-update</artifactId>' '<version>1.0.0</version>' \
            '<repositories>' \
            '<repository><id>huaweidev</id><url>https://developer.huawei.com/repo/</url></repository>' \
            '<repository><id>huaweicloud1</id><url>https://repo.huaweicloud.com/repository/maven/</url></repository>' \
            '<repository><id>huaweicloud2</id><url>https://mirrors.huaweicloud.com/repository/maven/</url></repository>' \
            '<repository><id>honor</id><url>https://repo.hihonor.com/honor-maven/</url></repository>' \
            '</repositories>' '</project>' > pom.xml
          export MAVEN_OPTS="-Dmaven.repo.local=$PWD/.m2repo"
          repos="https://developer.huawei.com/repo/,https://repo.huaweicloud.com/repository/maven/,https://mirrors.huaweicloud.com/repository/maven/,https://repo.hihonor.com/honor-maven/"
          mvn_get(){ mvn -B -q org.apache.maven.plugins:maven-dependency-plugin:3.6.0:get -Dartifact=$1 -DremoteRepositories=$repos || true; }
          if [ $need_app -eq 1 ]; then for v in "${app_vers[@]}"; do mvn_get com.huawei.hms:appupdate:$v:aar; done; find .m2repo -type f -name 'appupdate-*.aar' -exec cp {} dl/ \; || true; fi
          if [ $need_sdk -eq 1 ]; then for v in "${sdk_vers[@]}"; do mvn_get com.huawei.updatesdk:update-sdk:$v:aar; done; find .m2repo -type f -name 'update-sdk-*.aar' -exec cp {} dl/ \; || true; fi
          ls -l dl || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: huawei-update-aars
          path: dl/*.aar
          if-no-files-found: warn
